{"version":3,"sources":["apiKeys.js","images/WeatherIcons.gif","forcast.js","currentLocation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","key","base","Forcast","props","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","error","setError","_useState5","_useState6","weather","setWeather","search","city","axios","get","concat","apiKeys","then","response","data","catch","console","log","message","defaults","useEffect","React","createElement","className","ReactAnimatedWeather","icon","color","size","animate","type","placeholder","onChange","e","target","value","src","onClick","main","name","sys","country","Math","round","temp","humidity","visibility","wind","speed","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","Weather","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","apply","lat","lon","errorMessage","temperatureC","temperatureF","description","sunrise","sunset","errorMsg","getPosition","options","navigator","geolocation","getCurrentPosition","getWeather","_ref","_asyncToGenerator","_callee","api_call","_context","fetch","json","setState","t0","_x","_x2","_createClass","_this2","this","position","coords","latitude","longitude","alert","timerID","setInterval","clearInterval","Fragment","id","Clock","format","interval","ticking","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","loader","style","width","WebkitUserDrag","fontSize","fontWeight","marginTop","Component","App","CurrentLocation","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79115426.chunk.js","sourcesContent":["// Visit https://api.openweathermap.org & then signup to get our API keys for free\nmodule.exports = {\n  key: \"f09654878951fc2e5baf0c52946c1d61\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n","module.exports = __webpack_public_path__ + \"static/media/WeatherIcons.0a218296.gif\";","import React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nfunction Forcast(props) {\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = (city) => {\n    axios\n      .get(\n        `${apiKeys.base}weather?q=${\n          city != \"[object Object]\" ? city : query\n        }&units=metric&APPID=${apiKeys.key}`\n      )\n      .then((response) => {\n        setWeather(response.data);\n        setQuery(\"\");\n      })\n      .catch(function (error) {\n        console.log(error);\n        setWeather(\"\");\n        setQuery(\"\");\n        setError({ message: \"Not Found\", query: query });\n      });\n  };\n  function checkTime(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    } // add zero in front of numbers < 10\n    return i;\n  }\n\n  const defaults = {\n    color: \"yellow\",\n    size: 112,\n    animate: true,\n  };\n\n  useEffect(() => {\n    search(\"Delhi\");\n  }, []);\n\n  return (\n    <div className=\"forecast\">\n      <div className=\"forecast-icon\">\n        <ReactAnimatedWeather\n          icon={props.icon}\n          color={defaults.color}\n          size={defaults.size}\n          animate={defaults.animate}\n        />\n      </div>\n      <div className=\"today-weather\">\n        <h3>{props.weather}</h3>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search any city\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n          />\n          <div className=\"img-box\">\n            {\" \"}\n            <img\n              src=\"https://images.avishkaar.cc/workflow/newhp/search-white.png\"\n              onClick={search}\n            />\n          </div>\n        </div>\n        <ul>\n          {typeof weather.main != \"undefined\" ? (\n            <div>\n              {\" \"}\n              <li className=\"cityHead\">\n                <p>\n                  {weather.name}, {weather.sys.country}\n                </p>\n                <img\n                  className=\"temp\"\n                  src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n                />\n              </li>\n              <li>\n                Temperature{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.main.temp)}°c ({weather.weather[0].main})\n                </span>\n              </li>\n              <li>\n                Humidity{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.main.humidity)}%\n                </span>\n              </li>\n              <li>\n                Visibility{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.visibility)} mi\n                </span>\n              </li>\n              <li>\n                Wind Speed{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.wind.speed)} Km/h\n                </span>\n              </li>\n            </div>\n          ) : (\n            <li>\n              {error.query} {error.message}\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\nexport default Forcast;\n","import React from \"react\";\nimport apiKeys from \"./apiKeys\";\nimport Clock from \"react-live-clock\";\nimport Forcast from \"./forcast\";\nimport loader from \"./images/WeatherIcons.gif\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\nconst dateBuilder = (d) => {\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day}, ${date} ${month} ${year}`;\n};\nconst defaults = {\n  color: \"yellow\",\n  size: 112,\n  animate: true,\n};\nclass Weather extends React.Component {\n  state = {\n    lat: undefined,\n    lon: undefined,\n    errorMessage: undefined,\n    temperatureC: undefined,\n    temperatureF: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    icon: \"CLEAR_DAY\",\n    sunrise: undefined,\n    sunset: undefined,\n    errorMsg: undefined,\n  };\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      this.getPosition()\n        //If user allow location service then will fetch data & send it to get-weather function.\n        .then((position) => {\n          this.getWeather(position.coords.latitude, position.coords.longitude);\n        })\n        .catch((err) => {\n          //If user denied location service then standard location weather will le shown on basis of latitude & latitude.\n          this.getWeather(28.67, 77.22);\n          alert(\n            \"You have disabled location service. Allow 'This APP' to access your location. Your current location will be used for calculating Real time weather.\"\n          );\n        });\n    } else {\n      alert(\"Geolocation not available\");\n    }\n\n    this.timerID = setInterval(\n      () => this.getWeather(this.state.lat, this.state.lon),\n      600000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  // tick = () => {\n  //   this.getPosition()\n  //   .then((position) => {\n  //     this.getWeather(position.coords.latitude, position.coords.longitude)\n  //   })\n  //   .catch((err) => {\n  //     this.setState({ errorMessage: err.message });\n  //   });\n  // }\n\n  getPosition = (options) => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject, options);\n    });\n  };\n  getWeather = async (lat, lon) => {\n    const api_call = await fetch(\n      `${apiKeys.base}weather?lat=${lat}&lon=${lon}&units=metric&APPID=${apiKeys.key}`\n    );\n    const data = await api_call.json();\n    this.setState({\n      lat: lat,\n      lon: lon,\n      city: data.name,\n      temperatureC: Math.round(data.main.temp),\n      temperatureF: Math.round(data.main.temp * 1.8 + 32),\n      humidity: data.main.humidity,\n      main: data.weather[0].main,\n      country: data.sys.country,\n      // sunrise: this.getTimeFromUnixTimeStamp(data.sys.sunrise),\n\n      // sunset: this.getTimeFromUnixTimeStamp(data.sys.sunset),\n    });\n    switch (this.state.main) {\n      case \"Haze\":\n        this.setState({ icon: \"CLEAR_DAY\" });\n        break;\n      case \"Clouds\":\n        this.setState({ icon: \"CLOUDY\" });\n        break;\n      case \"Rain\":\n        this.setState({ icon: \"RAIN\" });\n        break;\n      case \"Snow\":\n        this.setState({ icon: \"SNOW\" });\n        break;\n      case \"Dust\":\n        this.setState({ icon: \"WIND\" });\n        break;\n      case \"Drizzle\":\n        this.setState({ icon: \"SLEET\" });\n        break;\n      case \"Fog\":\n        this.setState({ icon: \"FOG\" });\n        break;\n      case \"Smoke\":\n        this.setState({ icon: \"FOG\" });\n        break;\n      case \"Tornado\":\n        this.setState({ icon: \"WIND\" });\n        break;\n      default:\n        this.setState({ icon: \"CLEAR_DAY\" });\n    }\n  };\n\n  render() {\n    if (this.state.temperatureC) {\n      return (\n        <React.Fragment>\n          <div className=\"city\">\n            <div className=\"title\">\n              <h2>{this.state.city}</h2>\n              <h3>{this.state.country}</h3>\n            </div>\n            <div className=\"mb-icon\">\n              {\" \"}\n              <ReactAnimatedWeather\n                icon={this.state.icon}\n                color={defaults.color}\n                size={defaults.size}\n                animate={defaults.animate}\n              />\n              <p>{this.state.main}</p>\n            </div>\n            <div className=\"date-time\">\n              <div className=\"dmy\">\n                <div id=\"txt\"></div>\n                <div className=\"current-time\">\n                  <Clock format=\"HH:mm\" interval={1000} ticking={true} />\n                </div>\n                <div className=\"current-date\">{dateBuilder(new Date())}</div>\n              </div>\n              <div className=\"temperature\">\n                <p>\n                  {this.state.temperatureC}°<span>C</span>\n                </p>\n                {/* <span className=\"slash\">/</span>\n                {this.state.temperatureF} &deg;F */}\n              </div>\n            </div>\n          </div>\n          <Forcast icon={this.state.icon} weather={this.state.main} />\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <img src={loader} style={{ width: \"50%\", WebkitUserDrag: \"none\" }} />\n          <h3 style={{ color: \"white\", fontSize: \"22px\", fontWeight: \"600\" }}>\n            Detecting your location\n          </h3>\n          <h3 style={{ color: \"white\", marginTop: \"10px\" }}>\n            Your current location wil be displayed on the App <br></br> & used\n            for calculating Real time weather.\n          </h3>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default Weather;\n","import React, { useState } from \"react\";\nimport CurrentLocation from \"./currentLocation\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <CurrentLocation />\n      </div>\n      <div className=\"footer-info\">\n        <a href=\"https://github.com/0xitsHimanshu/WeatherApp\">\n          Download Source Code\n        </a>{\" \"}\n        | Developed by{\" \"}\n        <a target=\"_blank\" href=\"https://www.gauravghai.dev/\">\n          Himanshu ❤️\n        </a>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}